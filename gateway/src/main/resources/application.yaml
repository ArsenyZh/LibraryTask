server:
  port: 8080

spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        - id: book-service-route
          uri: lb://book-service
          predicates:
            - Path=/api/v1/books/**
          filters:
            - StripPrefix=3

        - id: library-service-route
          uri: lb://library-service
          predicates:
            - Path=/api/v1/library/**
          filters:
            - StripPrefix=3

        - id: auth-service-route
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1

eureka:
  client:
    healthcheck:
      enabled: true
logging:
  level:
    org.springframework: debug

security:
  jwt:
    secret-key: 3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
    prefix: "Bearer"

springdoc:
  api-docs:
    path: /api-docs              # Путь для получения OpenAPI спецификаций
    enable: true                       # Включить генерацию документации
  swagger-ui:
    path: /swagger-ui.html              # Путь для доступа к Swagger UI
    enabled: true                       # Включить Swagger UI
    urls:
      - url: /api-docs                  # URL для получения документации по gateway-service
        name: Gateway Service           # Имя для отображения в Swagger UI
      - url: /api/v1/books/api-docs     # URL для получения документации по book-service
        name: Book Service              # Имя для отображения в Swagger UI
      - url: /api/v1/library/api-docs   # URL для получения документации по library-service
        name: Library Service           # Имя для отображения в Swagger UI
      - url: /auth/api-docs             # URL для получения документации по auth-service
        name: Auth Service              # Имя для отображения в Swagger UI
